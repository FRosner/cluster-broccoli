{
  "name": "braces",
  "description": "Fastest brace expansion lib. Typically used with file paths, but can be used with any string. Expands comma-separated values (e.g. `foo/{a,b,c}/bar`) and alphabetical or numerical ranges (e.g. `{1..9}`)",
  "version": "0.1.5",
  "homepage": "https://github.com/jonschlinkert/braces",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jonschlinkert/braces.git"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/braces/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jonschlinkert/braces/blob/master/LICENSE-MIT"
    }
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "dependencies": {
    "expand-range": "^0.1.0"
  },
  "devDependencies": {
    "benchmarked": "^0.1.1",
    "brace-expansion": "0.0.0",
    "lodash": "^2.4.1",
    "minimatch": "^1.0.0",
    "mocha": "*",
    "should": "^4.1.0"
  },
  "keywords": [
    "alpha",
    "alphabetical",
    "bash",
    "brace",
    "expand",
    "expansion",
    "file",
    "filepath",
    "fp",
    "fs",
    "glob",
    "globbing",
    "match",
    "matches",
    "matching",
    "number",
    "numerical",
    "path",
    "range",
    "ranges",
    "sh"
  ],
  "readme": "# braces [![NPM version](https://badge.fury.io/js/braces.svg)](http://badge.fury.io/js/braces)\n\n> Fastest brace expansion lib. Typically used with file paths, but can be used with any string. Expands comma-separated values (e.g. `foo/{a,b,c}/bar`) and alphabetical or numerical ranges (e.g. `{1..9}`)\n\n## Benchmarks\n\n```bash\nnode benchmark\n```\n\n## Example usage\n\n```js\nvar expand = require('braces');\n\nexpand('a/{x,y}/c{d}e')\n//=> ['a/x/cde', 'a/y/cde']\n\nexpand('a/b/c/{x,y}')\n//=> ['a/b/c/x', 'a/b/c/y']\n\nexpand('a/{x,{1..5},y}/c{d}e')\n//=> ['a/x/cde', 'a/1/cde', 'a/y/cde', 'a/2/cde', 'a/3/cde', 'a/4/cde', 'a/5/cde']\n```\n\nSee the [examples](./examples.js) and [tests](./test) to see more use cases.\n\n\n### Range expansion\n\nUses [expand-range](https://github.com/jonschlinkert/expand-range) for range expansion.\n\n```js\nexpand('a{1..3}b')\n//=> ['a1b', 'a2b', 'a3b']\n\nexpand('a{5..8}b')\n//=> ['a5b', 'a6b', 'a7b', 'a8b']\n\nexpand('a{00..05}b')\n//=> ['a00b', 'a01b', 'a02b', 'a03b', 'a04b', 'a05b']\n\nexpand('a{01..03}b')\n//=> ['a01b', 'a02b', 'a03b']\n\nexpand('a{000..005}b')\n//=> ['a000b', 'a001b', 'a002b', 'a003b', 'a004b', 'a005b']\n\nexpand('a{a..e}b')\n//=> ['aab', 'abb', 'acb', 'adb', 'aeb']\n\nexpand('a{A..E}b')\n//=> ['aAb', 'aBb', 'aCb', 'aDb', 'aEb']\n```\n\nPass a function as the last argument to customize range expansions:\n\n```js\nvar range = expand('x{a..e}y', function (str, i) {\n  return String.fromCharCode(str) + i;\n});\n\nconsole.log(range);\n//=> ['xa0y', 'xb1y', 'xc2y', 'xd3y', 'xe4y']\n```\nSee [expand-range](https://github.com/jonschlinkert/expand-range) for benchmarks, tests and information related to expanding ranges.\n\n\n## Install\n### Install with [npm](npmjs.org)\n\n```bash\nnpm i braces --save\n```\n\n## Run tests\n\n```bash\nnpm test\n```\n\n## Contributing\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/braces/issues).\n\n## Author\n\n**Jon Schlinkert**\n \n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert) \n\n## License\nCopyright (c) 2014 Jon Schlinkert  \nReleased under the MIT license\n\n***\n\n_This file was generated by [verb](https://github.com/assemble/verb) on November 23, 2014._",
  "readmeFilename": "README.md",
  "_id": "braces@0.1.5",
  "_from": "braces@^0.1.2"
}
